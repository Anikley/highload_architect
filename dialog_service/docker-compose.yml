version: '3.8'
# volumes:
  # grafana_data: {}
  
services:
    dialog-service:
        image: dialog-services-01
        # build:
          # dockerfile: ./Dockerfile
          # context: .
        restart: unless-stopped
        #command: "consul services register -name dialog-services-01 -http-addr 172.18.0.6:8500"
        ports:
          - "9011-9015:8080"
        networks:
          - otus

    consul-server:
      image: consul:latest
      container_name: consul-server
      hostname: consul-server
      command: "agent -server -retry-join consul-bootstrap -client 0.0.0.0"
      networks:
        - otus
    
    consul-bootstrap:
      image: consul:latest
      container_name: consul-bootstrap
      command: agent -server -bootstrap-expect 1 -ui -client 0.0.0.0
      ports:
        - "8300:8300"
        - "8400:8400"
        - "8500:8500"
        - "8600:8600"
        - "8600:8600/udp"      
      restart: on-failure:10
      networks:
        - otus
  
  # todo edit settings /bin/registrator 
  # -cleanup=false: Remove dangling services
  # -deregister="always": Deregister exited services "always" or "on-success"
  # -internal=false: Use internal ports instead of published ones
  # -ip="": IP for ports mapped to the host
  # -resync=0: Frequency with which services are resynchronized
  # -retry-attempts=0: Max retry attempts to establish a connection with the backend. Use -1 for infinite retries
  # -retry-interval=2000: Interval (in millisecond) between retry-attempts.
  # -tags="": Append tags for all registered services
  # -ttl=0: TTL for services (default is no expiry)
  # -ttl-refresh=0: Frequency with which service TTLs are refreshed
  
    registrator:
      image: gliderlabs/registrator:latest
      container_name: registrator
      environment: 
          CONSUL_BIND_INTERFACE: eth0
          CONSUL_HOST: consul-bootstrap
      depends_on:
        - consul-bootstrap
      network_mode: host 
      volumes:
        - /var/run/docker.sock:/tmp/docker.sock
      command: "consul://172.18.0.4:8500"

    nginx-consul:
        container_name: nginx-consul
        build:
          dockerfile: ./docker-consul-nginx/Dockerfile 
          context: .
        volumes:
         - ./docker-consul-nginx/templates/service.ctmpl:/etc/nginx/templates/service.ctmpl
         - ./docker-consul-nginx/start.sh:/etc/nginx/start.sh
        depends_on:
         - registrator
        command: "sh start.sh"
        ports:
         - 8080:8080
        links:
         - registrator
        networks:
         - otus      
                 
networks:
  otus:
    driver: bridge
