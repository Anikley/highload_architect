version: '3.8'
volumes:
  grafana_data: {}
  
services:
  mysql-server:
    image: mysql:5.7
    container_name: zabbix_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_pwd
      MYSQL_DATABASE: zabbix
      MYSQL_USER: zabbix
      MYSQL_PASSWORD: zabbix
    ports:
      - '3306:3306'
    restart: always
    volumes:
      - ./src/mysql:/var/lib/mysql
    networks:
      - otus
    command: ['mysqld', '--character-set-server=utf8', '--collation-server=utf8_bin']
    
  zabbix-server:
    image: zabbix/zabbix-server-mysql:alpine-latest
    container_name: zabbix_server
    environment:
      DB_SERVER_HOST: mysql-server
      MYSQL_DATABASE: zabbix
      MYSQL_USER: zabbix
      MYSQL_PASSWORD: zabbix
    ports:
       - '10051:10051'
    restart: always
    links: 
      - mysql-server
    depends_on:
      - mysql-server
    networks:
      - otus

  zabbix-web:
    image: zabbix/zabbix-web-nginx-mysql:alpine-latest
    container_name: zabbix-web
    environment:
      MYSQL_ROOT_PASSWORD: root_pwd
      MYSQL_USER: zabbix
      MYSQL_PASSWORD: zabbix
      ZBX_SERVER_HOST: zabbix-server
      PHP_TZ: Europe/Moscow
    ports:
      - '443:443'
      - '4545:8080'
    restart: always
    links: 
      - zabbix-server
    depends_on:
      - zabbix-server
    networks:
      - otus

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    networks:
      - otus
    ports:
      - 9090:9090
    expose: [ "9090" ]
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command: 
      - --config.file=/etc/prometheus/prometheus.yml
    labels:
        org.label-schema.group: "monitoring"
    depends_on:
    - cadvisor  
      
  grafana:
    image: grafana/grafana:7.3.6
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - otus
    depends_on:
    - prometheus
    ports:
      - '3001:3000'
    labels:
      org.label-schema.group: "monitoring"
      
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    networks:
      - otus
    ports:
    - 8080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro   
    - /dev/disk/:/dev/disk:ro
      
  zookeeper:
    networks:
      - otus
    hostname: zookeeper
    image: wurstmeister/zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"

  kafka:
    networks:
      - otus
    image: confluentinc/cp-enterprise-kafka:latest
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: "true"
      KAFKA_LOG_RETENTION_MS: 8640000000
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      
  dialog-service:
    build:
      dockerfile: Dockerfile 
      context: .
    restart: unless-stopped
    container_name: dialog-service
    hostname: dialog-service
    privileged: false
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 9010:8080
      - 10050:10050
    networks:
      - otus
      
networks:
  otus:
    driver: bridge
